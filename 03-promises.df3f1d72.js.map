{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAE7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBA+BjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,CAAEL,WAAUJ,UAEhBU,EAAI,CAAEN,WAAUJ,S,GAEjBA,E,IArCPJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAiBC,GACfA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOpB,EAAKC,KAAKoB,SAASjB,MAAMkB,OACtCjB,EAAOe,OAAOpB,EAAKC,KAAKoB,SAAShB,KAAKiB,OACtChB,EAASN,EAAKC,KAAKoB,SAASf,OAAOgB,MAErCC,EAAW,EAEf,IAAKA,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACjDhB,EAAcgB,EAAUJ,GACrBK,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAGjD0B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAIjDe,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onClick);\n\nfunction onClick(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.form.elements.delay.value);\n  const step = Number(refs.form.elements.step.value);\n  const amount = refs.form.elements.amount.value;\n\n  let position = 1;\n\n  for (position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","delay1","Number","elements","value","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.df3f1d72.js.map"}