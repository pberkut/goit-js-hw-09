{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAE7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAoCjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEtBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAC1BA,EAAM,G,CAzCfJ,EAAKI,MAAMY,MAAQ,IACnBhB,EAAKK,KAAKW,MAAQ,IAClBhB,EAAKM,OAAOU,MAAQ,EAEpBhB,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAiBC,GACfA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOrB,EAAKC,KAAKqB,SAASlB,MAAMY,OAC5C,MAAMX,EAAOgB,OAAOrB,EAAKC,KAAKqB,SAASjB,KAAKW,OACtCV,EAASN,EAAKC,KAAKqB,SAAShB,OAAOU,MAEzC,IAAIO,EAAW,EAEf,IAAKA,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACjDH,GAASf,EAETE,EAAcgB,EAAUH,GACrBI,MAAK,EAAChB,SAAEA,EAAQJ,MAAEA,MACjBqB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBnB,QAAiBJ,MAAU,IAGnDwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBqB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBrB,QAAeJ,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\n// Temp value\nrefs.delay.value = 500;\nrefs.step.value = 100;\nrefs.amount.value = 5;\n\nrefs.form.addEventListener('submit', onClick);\n\nfunction onClick(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.form.elements.delay.value);\n  const step = Number(refs.form.elements.step.value);\n  const amount = refs.form.elements.amount.value;\n\n  let position = 1;\n\n  for (position = 1; position <= amount; position += 1) {\n    delay += step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        }\n        reject({ position, delay });\n      }, delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        }\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","value","addEventListener","e","preventDefault","delay1","Number","elements","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9585e97e.js.map"}